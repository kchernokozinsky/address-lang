l1 = ["a", "b", "c", "d", "e", "f", "g"];
l2 = ["1", "2", "3", "4", "5", "6", "7"];

'k = 5

       SP get {l1, k, result} l1
l1 ... SP len {l1, length} l2
l2 ... SP rem {l1, k} l3
l3 ... SP concat {l1, l2} l4
l4 ... SP print {l1} l5
l5 ... 

#Print{"5th element of l1: ", 'result}
Print{"length: ",'length}

!

# print list elements
print ... null => list;

    L {0, 1, true => i } l l 
            P {D {list, 'i} == null} return | Print {'(D {list, 'i} + 1), ", "}
    l ... 

return

# concat lists
concat ... null => list1; null => list2;

    SP len {list1, len1} c
    
    
    c ... Print ;'(D {list1, 'len1}) = list2

return

# get element value by its index 
get ... null => list; null => index; null => e

    'e = '(D {list, 'index} + 1)

return

# get length of the list
len ... null => list; null => len

    L {0, 1, true => i } l l 
        
    P {D {list, 'i} == null} | @k
            'len = 'i; 
            return
        k...
    Print{'i}
    l ... 
 return   

# rem element by its index 
rem ... null => list; null => index;

    D {list, 'index} = D {list, 'index + 1}

return