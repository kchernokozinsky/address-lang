l = [1, 2, 3, 4, 5, 6, 7]
5 => val
SP bin_search {l, val, 0, 7, i}
Print {'i}

!
# get element value by its index 
get ... null => list; null => index; null => e
    'e = '(D {list, 'index} + 1)  
return

concat ... null => list1; null => list2;

    SP len {list1, len1}
    '(D {list1, 'len1 - 1}) = list2

return

len ... null => list; null => len

    L {0, 1, true => i } l1
        
    P {D {list, 'i} == null} | @k
            'len = 'i; 
            return
        k...
    l1 ... 
 return   

append ... null =>list; null => el

    SP len {list, len}
    '(D {list, 'len - 1}) = [el]

return

rem ... null => list; null => index;

    D {list, 'index} = D {list, 'index + 1}

return

print ... null => list
    'str = "[" 
    L {0, 1, true => i } l3
            P {D {list, 'i} == null} @end | 'str = Concat {'str,'(D {list, 'i} + 1),","}
    l3 ... 
end...
Print {'str, "]"}
return

bin_search ... null => list; null => value; null => low; null => high; null => index
    P {high < low} | @not_found
        -1 => index
    return
    not_found...

    (low + high) / 2 => mid

    '(D{list, 'mid} + 1) => mid_val

    P {'mid_val > 'value} SP bin_search {list, value, low, 'mid - 1, index}  |  P {'mid_val < 'value} SP bin_search {list, value, 'mid + 1, high, index} | 'mid => index
return