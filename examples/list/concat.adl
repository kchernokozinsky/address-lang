l1 = ["a", "b", "c", "d", "e", "f", "g"];
l2 = ["1", "2", "3", "4", "5", "6", "7"];

SP concat {l1, l2}
SP print {l1}

!

# concat lists
concat ... null => list1; null => list2;

    SP len {list1, len1}
    '(D {list1, 'len1 - 1}) = list2

return

# get length of the list
len ... null => list; null => len

    L {0, 1, true => i } l1
        
    P {D {list, 'i} == null} | @k
            'len = 'i; 
            return
        k...
    l1 ... 
 return   

# print list elements
print ... null => list
    'str = "[" 
    L {0, 1, true => i } l3
            P {D {list, 'i} == null} @end | 'str = 'str + Str {'(D {list, 'i} + 1)} + ","
    l3 ... 
end... Print {'str + "]"}
return